name: mautic

on:
  schedule:
  - cron:  '00 01 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Nginx-php80-mautic:
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
    runs-on: ${{ matrix.os }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx, php 8.0 and mautic
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/
        APP_CODE_PATH_HOST: /tmp/mautic
        DB_NAME:  test
        DB_USER:  admin
        DB_PASSWORD:  password
        DATA_PATH_HOST: /tmp/db
    - name: PHP version check
      run:  docker exec mautic_mautic_1 php -v
    - name: Mongodb driver check
      run:  docker exec mautic_mautic_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec mautic_mautic_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec mautic_mautic_1 composer
    - name: Folder check
      run:  docker exec mautic_mautic_1 ls -la /app/
    - name: Application Install
      run:  |
        docker exec mautic_mautic_1 chown -R nobody:nobody /var/www/
    - name: Root path check
      run: |
        docker exec mautic_mautic_1 ls -la
        docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
    - name: Durpal application test
      run:  |
        sleep 30s
        docker exec mautic_mautic_1 chown -R nobody:nobody /var/www/
        docker exec mautic_mautic_1 ls -la
        docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/index.php/installer)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec mautic_mautic_1 ls -la /var/www
    - name: Root path check
      run: docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
    - name: Mautic test
      run:  curl -i http://localhost:5647/index.php/installer
    - name: Destroy container and file
      run:  |
        docker-compose down
        echo "y" | docker system prune -a
        echo "y" | docker image prune
        sudo rm -rf /tmp/db
        sudo rm -rf /tmp/mautic
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with: 
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        channel: '#github_action_status'
      if: always()
  # Nginx-php8-mautic-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx, php 8.0 and Mautic
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "8.0"
  #       BACK_END: nginx
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www
  #       APP_CODE_PATH_HOST: /tmp/mautic
  #       DB_NAME:  test
  #       DB_USER:  admin
  #       DB_PASSWORD:  password
  #       DATA_PATH_HOST: /tmp/db
  #   - name: PHP version check
  #     run:  docker exec mautic_mautic_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec mautic_mautic_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec mautic_mautic_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec mautic_mautic_1 composer
  #   - name: Folder check
  #     run:  docker exec mautic_mautic_1 ls -la /app/
  #   - name: Application Install
  #     run:  |
  #       docker exec mautic_mautic_1 chown -R nobody:nobody /var/www/
  #   - name: Root path check
  #     run: |
  #       docker exec mautic_mautic_1 ls -la
  #       docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
  #   - name: Durpal application test
  #     run:  |
  #       sleep 30s
  #       docker exec mautic_mautic_1 chown -R nobody:nobody /var/www/
  #       docker exec mautic_mautic_1 ls -la
  #       docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
  #       while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/index.php/installer)" != "200" ]]; 
  #       do 
  #         sleep 10s
  #       done
  #   - name: Root path check
  #     run: docker exec mautic_mautic_1 ls -la /var/www
  #   - name: Root path check
  #     run: docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
  #   - name: Mautic test
  #     run:  curl -i http://localhost:5647/index.php/installer
  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker system prune -a
  #       sudo rm -rf /tmp/db
  #       sudo rm -rf /tmp/mautic
  
  Nginx-php74-mautic:
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
    runs-on: ${{ matrix.os }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx, php 7.4 and mautic
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        BACK_END: nginx
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/
        APP_CODE_PATH_HOST: /tmp/mautic
        DB_NAME:  test
        DB_USER:  admin
        DB_PASSWORD:  password
        DATA_PATH_HOST: /tmp/db
    - name: PHP version check
      run:  docker exec mautic_mautic_1 php -v
    - name: Mongodb driver check
      run:  docker exec mautic_mautic_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec mautic_mautic_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec mautic_mautic_1 composer
    - name: Folder check
      run:  docker exec mautic_mautic_1 ls -la /app/
    - name: Application Install
      run:  |
        docker exec mautic_mautic_1 chown -R nobody:nobody /var/www/
    - name: Root path check
      run: |
        docker exec mautic_mautic_1 ls -la
        docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
    - name: Durpal application test
      run:  |
        sleep 30s
        docker exec mautic_mautic_1 chown -R nobody:nobody /var/www/
        docker exec mautic_mautic_1 ls -la
        docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/index.php/installer)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec mautic_mautic_1 ls -la /var/www
    - name: Root path check
      run: docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
    - name: Mautic test
      run:  curl -i http://localhost:5647/index.php/installer
    - name: Destroy container and file
      run:  |
        docker-compose down
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        sudo rm -rf /tmp/db
        sudo rm -rf /tmp/mautic
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with: 
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        channel: '#github_action_status'
      if: always()
  # Nginx-php7-mautic-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx, php 7.4 and mautic
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "7.4"
  #       BACK_END: nginx
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www
  #       APP_CODE_PATH_HOST: /tmp/mautic
  #       DB_NAME:  test
  #       DB_USER:  admin
  #       DB_PASSWORD:  password
  #       DATA_PATH_HOST: /tmp/db
  #   - name: PHP version check
  #     run:  docker exec mautic_mautic_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec mautic_mautic_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec mautic_mautic_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec mautic_mautic_1 composer
  #   - name: Folder check
  #     run:  docker exec mautic_mautic_1 ls -la /app/
  #   - name: Application Install
  #     run:  |
  #       docker exec mautic_mautic_1 chown -R nobody:nobody /var/www/
  #   - name: Root path check
  #     run: |
  #       docker exec mautic_mautic_1 ls -la
  #       docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
  #   - name: Durpal application test
  #     run:  |
  #       sleep 30s
  #       docker exec mautic_mautic_1 chown -R nobody:nobody /var/www/
  #       docker exec mautic_mautic_1 ls -la
  #       docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
  #       while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/index.php/installer)" != "200" ]]; 
  #       do 
  #         sleep 10s
  #       done
  #   - name: Root path check
  #     run: docker exec mautic_mautic_1 ls -la /var/www
  #   - name: Root path check
  #     run: docker exec mautic_mautic_1 cat /etc/nginx/conf.d/default.conf
  #   - name: Mautic test
  #     run:  curl -i http://localhost:5647/index.php/installer
  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker system prune -a
  #       sudo rm -rf /tmp/db
  #       sudo rm -rf /tmp/mautic

   
  Apache-php80-mautic:
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
    runs-on: ${{ matrix.os }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image apache, php 8.0 and mautic
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "8.0"
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/
        APP_CODE_PATH_HOST: /tmp/mautic
        DB_NAME:  test
        DB_USER:  admin
        DB_PASSWORD:  password
        DATA_PATH_HOST: /tmp/db
    - name: PHP version check
      run:  docker exec mautic_mautic_1 php -v
    - name: Mongodb driver check
      run:  docker exec mautic_mautic_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec mautic_mautic_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec mautic_mautic_1 composer
    - name: Folder check
      run:  docker exec mautic_mautic_1 ls -la /app/
    - name: Application Install
      run:  |
        docker exec mautic_mautic_1 chown -R apache:apache /var/www/
    - name: Root path check
      run: |
        docker exec mautic_mautic_1 ls -la
        docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
    - name: Durpal application test
      run:  |
        sleep 30s
        docker exec mautic_mautic_1 chown -R apache:apache /var/www/
        docker exec mautic_mautic_1 ls -la
        docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/installer)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec mautic_mautic_1 ls -la /var/www
    - name: Root path check
      run: docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
    - name: Mautic test
      run:  curl -i http://localhost:5647/installer
    - name: Destroy container and file
      run:  |
        docker-compose down
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        sudo rm -rf /tmp/db
        sudo rm -rf /tmp/mautic
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with: 
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        channel: '#github_action_status'
      if: always()
  # Apache-php8-mautic-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image apache, php 8.0 and mautic
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "8.0"
  #       BACK_END: apache
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www
  #       APP_CODE_PATH_HOST: /tmp/mautic
  #       DB_NAME:  test
  #       DB_USER:  admin
  #       DB_PASSWORD:  password
  #       DATA_PATH_HOST: /tmp/db
  #   - name: PHP version check
  #     run:  docker exec mautic_mautic_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec mautic_mautic_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec mautic_mautic_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec mautic_mautic_1 composer
  #   - name: Folder check
  #     run:  docker exec mautic_mautic_1 ls -la /app/
  #   - name: Application Install
  #     run:  |
  #       docker exec mautic_mautic_1 chown -R apache:apache /var/www/
  #   - name: Root path check
  #     run: |
  #       docker exec mautic_mautic_1 ls -la
  #       docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
  #   - name: Durpal application test
  #     run:  |
  #       sleep 30s
  #       docker exec mautic_mautic_1 chown -R apache:apache /var/www/
  #       docker exec mautic_mautic_1 ls -la
  #       docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
  #       while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/installer)" != "200" ]]; 
  #       do 
  #         sleep 10s
  #       done
  #   - name: Root path check
  #     run: docker exec mautic_mautic_1 ls -la /var/www
  #   - name: Root path check
  #     run: docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
  #   - name: Mautic test
  #     run:  curl -i http://localhost:5647/installer
  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker system prune -a
  #       sudo rm -rf /tmp/db
  #       sudo rm -rf /tmp/mautic
  
  Apache-php7-mautic:
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
    runs-on: ${{ matrix.os }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image apache, php 7.4 and mautic
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
        PHP_VERSION: "7.4"
        BACK_END: apache
        XDEBUG: true
        DISPLAY_PHPERROR: true
        SERVER_ROOT:  /var/www/
        APP_CODE_PATH_HOST: /tmp/mautic
        DB_NAME:  test
        DB_USER:  admin
        DB_PASSWORD:  password
        DATA_PATH_HOST: /tmp/db
    - name: PHP version check
      run:  docker exec mautic_mautic_1 php -v
    - name: Mongodb driver check
      run:  docker exec mautic_mautic_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec mautic_mautic_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec mautic_mautic_1 composer
    - name: Folder check
      run:  docker exec mautic_mautic_1 ls -la /app/
    - name: Application Install
      run:  |
        docker exec mautic_mautic_1 chown -R apache:apache /var/www/
    - name: Root path check
      run: |
        docker exec mautic_mautic_1 ls -la
        docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
    - name: Durpal application test
      run:  |
        sleep 30s
        docker exec mautic_mautic_1 chown -R apache:apache /var/www/
        docker exec mautic_mautic_1 ls -la
        docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/installer)" != "200" ]]; 
        do 
          sleep 10s
        done
    - name: Root path check
      run: docker exec mautic_mautic_1 ls -la /var/www
    - name: Root path check
      run: docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
    - name: Mautic test
      run:  curl -i http://localhost:5647/installer
    - name: Destroy container and file
      run:  |
        docker-compose down
        echo "y" | docker system prune -a
        echo "y" | docker image prune -a
        sudo rm -rf /tmp/db
        sudo rm -rf /tmp/mautic
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with: 
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        channel: '#github_action_status'
      if: always()
  # Apache-php7-mautic-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image apache, php 7.4 and mautic
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #       PHP_VERSION: "7.4"
  #       BACK_END: apache
  #       XDEBUG: true
  #       DISPLAY_PHPERROR: true
  #       SERVER_ROOT:  /var/www
  #       APP_CODE_PATH_HOST: /tmp/mautic
  #       DB_NAME:  test
  #       DB_USER:  admin
  #       DB_PASSWORD:  password
  #       DATA_PATH_HOST: /tmp/db
  #   - name: PHP version check
  #     run:  docker exec mautic_mautic_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec mautic_mautic_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec mautic_mautic_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec mautic_mautic_1 composer
  #   - name: Folder check
  #     run:  docker exec mautic_mautic_1 ls -la /app/
  #   - name: Application Install
  #     run:  |
  #       docker exec mautic_mautic_1 chown -R apache:apache /var/www/
  #   - name: Root path check
  #     run: |
  #       docker exec mautic_mautic_1 ls -la
  #       docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
  #   - name: Durpal application test
  #     run:  |
  #       sleep 30s
  #       docker exec mautic_mautic_1 chown -R apache:apache /var/www/
  #       docker exec mautic_mautic_1 ls -la
  #       docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
  #       while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:5647/installer)" != "200" ]]; 
  #       do 
  #         sleep 10s
  #       done
  #   - name: Root path check
  #     run: docker exec mautic_mautic_1 ls -la /var/www
  #   - name: Root path check
  #     run: docker exec mautic_mautic_1 cat /etc/apache2/httpd.conf
  #   - name: Mautic test
  #     run:  curl -i http://localhost:5647/installer
  #   - name: Destroy container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker system prune -a
  #       sudo rm -rf /tmp/db
  #       sudo rm -rf /tmp/mautic
