ARG BACK_END
FROM ghcr.io/deck-app/${BACK_END}:v8.0
LABEL maintainer Naba Das <hello@get-deck.com>

# Persistent runtime dependencies
# Example RUN apk add --no-cache php8-openssl php8-sysvmsg php8-curl
RUN apk add --no-cache tar git php8-gd php8-pdo php8-pdo_dblib php8-pdo_mysql php8-pdo_odbc php8-pdo_pgsql php8-pdo_sqlite sudo

RUN mkdir -p /app
RUN mkdir -p /var/preview
COPY default.conf /app/default.conf
COPY httpd.conf /app/httpd.conf
RUN wget -O /var/preview/index.html https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html

ARG SERVER_ROOT
ARG BACK_END
RUN if [ ${BACK_END} = nginx ]; then \
    cp /app/default.conf /etc/nginx/conf.d/default.conf && \
    sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/nginx/conf.d/default.conf && \
    sed -i "s#{SERVER_ROOT}#/var/www/#g" /app/default.conf \
;else \
    cp /app/httpd.conf /etc/apache2/httpd.conf && \
    sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/apache2/httpd.conf && \
    sed -i "s#{SERVER_ROOT}#/var/www/#g" /app/httpd.conf \
;fi
RUN apk add --no-cache zip

WORKDIR /var/www
#PHP display error enable or disable
COPY php.ini /etc/php8/php.ini
ARG DISPLAY_PHPERROR
RUN if [ ${DISPLAY_PHPERROR} = true ]; then \
sed -i "s#{DISPLAY}#On#g" /etc/php8/php.ini \
;else \
sed -i "s#{DISPLAY}#Off#g" /etc/php8/php.ini \
;fi

#Xdebug enable or disable
ARG XDEBUG
RUN if [ ${XDEBUG} = true ]; then \
apk add php8-pecl-xdebug \
&& echo "zend_extension=xdebug" >> /etc/php8/php.ini \
;fi

COPY login.sh /etc/profile.d/login.sh
RUN if [ ${BACK_END} = nginx ]; then \
sed -i "s#{USER}#nobody#g" /etc/profile.d/login.sh \
;else \
sed -i "s#{USER}#apache#g" /etc/profile.d/login.sh \
;fi
RUN chmod +x /etc/profile.d/login.sh

# sudo command without password
RUN if [ ${BACK_END} = nginx ]; then \
echo "nobody ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
;else \
echo "apache ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
;fi

## Linux permission issue
ARG USER_ID
ARG GROUP_ID
RUN apk --no-cache add shadow unzip php8-imap
RUN if [[ ${BACK_END} = nginx ]] ; then usermod -u ${USER_ID} nobody && groupmod -g ${GROUP_ID} nobody ; else usermod -u ${USER_ID} apache && groupmod -g ${GROUP_ID} apache ; fi

COPY docker-entrypoint.sh /docker-entrypoint.sh
#Application Download
RUN curl -fLk -o /app/mautic.zip  "https://github.com/mautic/mautic/releases/download/4.4.0/4.4.0.zip"
RUN cd /app/ && unzip mautic.zip && rm mautic.zip 
RUN mv /app/.htaccess /app/.htaccess_origin
COPY htaccess /app/.htaccess
RUN sed -i "s#{BACK_END}#${BACK_END}#g" /docker-entrypoint.sh

RUN chmod +x /docker-entrypoint.sh
CMD /docker-entrypoint.sh & /sbin/runit-wrapper